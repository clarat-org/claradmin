# frozen_string_literal: true

class SyncAbsencesWorker
  include Sidekiq::Worker

  def perform
    absences = AbsenceCommunicator.new.get_all_vacations_and_sickness_absences
    Absence.transaction do
      Absence.update_all sync: false

      absences.each do |api_absence|
        user = User.find_by!(email: api_absence['assignedTo']['email'])
        db_absence_attributes = {
          starts_at: api_absence['start'], ends_at: api_absence['end'],
          user_id: user.id
        }
        existing_db_absence = Absence.where(db_absence_attributes).first

        if existing_db_absence
          existing_db_absence.update_column sync: true
        else
          Absence.create! db_absence_attributes
        end
      end

      # Delete absences that were deleted on API
      Absence.where(sync: false).delete_all!
    end
  end
end
