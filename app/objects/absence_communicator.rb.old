# frozen_string_literal: true

require 'hawk'

class AbsenceCommunicator < NetCommunicator

  def initialize
    super 'https://app.absence.io'
    @hawk_id = Rails.application.secrets.absence[:hawk_id]
    @hawk_key = Rails.application.secrets.absence[:hawk_key]
  end

  def get_all_vacations_and_sickness_absences
    finished = false
    absences = []

    until finished do
      finished, last_index, new_absences = get_absences last_index
      absences += new_absences
    end

    absences
  end

  protected

  def modify_request request
    header = Hawk::Client.build_authorization_header(
      request_uri: request.path, method: request.method, host: @uri.host,
      port: @uri.port,
      credentials: {
        id: @hawk_id, key: @hawk_key, algorithm: 'sha256'
      }
    )
    request['Authorization'] = header
    request
  end

  private

  def get_absences start
    response = post_to_api(
      '/api/v2/absences',
      skip: start, limit: 50, relations: %w(assignedToId reasonId),
      filter: {
        'reasonId:absenceReason._id': {
          name: {'$nin': ['Home Office']}
        }
      }
    )
    object = JSON.parse response.body
    last_index = start + object['count']

    [
      (object['totalCount'] == last_index + 1),
      last_index,
      object['data']
    ]
  end
end

